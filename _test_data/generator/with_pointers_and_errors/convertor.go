// Code generated by datamapper.
// https://github.com/underbek/datamapper

// Package with_pointers_and_erros is a generated datamapper package.
package with_pointers_and_erros

import (
	"fmt"

	"github.com/underbek/datamapper/_test_data/generator/with_pointers_and_errors/cf"
)

// ConvertFromToTo convert From by tag map to To by tag map
func ConvertFromToTo(from From) (To, error) {
	fromID, err := cf.ConvertIntToDecimalPtr(from.ID)
	if err != nil {
		return To{}, fmt.Errorf("convert From.ID -> To.UUID failed: %w", err)
	}

	fromAge, err := cf.ConvertIntPtrToDecimal(from.Age)
	if err != nil {
		return To{}, fmt.Errorf("convert From.Age -> To.Age failed: %w", err)
	}

	fromCount, err := cf.ConvertIntPtrToDecimalPtr(from.Count)
	if err != nil {
		return To{}, fmt.Errorf("convert From.Count -> To.Count failed: %w", err)
	}

	fromOrig, err := cf.ConvertIntToDecimal(from.Orig)
	if err != nil {
		return To{}, fmt.Errorf("convert From.Orig -> To.Orig failed: %w", err)
	}

	return To{
		UUID:  fromID,
		Age:   fromAge,
		Count: fromCount,
		Orig:  fromOrig,
	}, nil
}
